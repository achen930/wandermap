/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as AuthenticatedProfileImport } from './routes/_authenticated/profile'
import { Route as AuthenticatedLocationsImport } from './routes/_authenticated/locations'
import { Route as AuthenticatedAddLocationImport } from './routes/_authenticated/add-location'
import { Route as AuthenticatedEditLocationLocationIdImport } from './routes/_authenticated/edit-location/$locationId'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedProfileRoute = AuthenticatedProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedLocationsRoute = AuthenticatedLocationsImport.update({
  id: '/locations',
  path: '/locations',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedAddLocationRoute = AuthenticatedAddLocationImport.update({
  id: '/add-location',
  path: '/add-location',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedEditLocationLocationIdRoute =
  AuthenticatedEditLocationLocationIdImport.update({
    id: '/edit-location/$locationId',
    path: '/edit-location/$locationId',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/add-location': {
      id: '/_authenticated/add-location'
      path: '/add-location'
      fullPath: '/add-location'
      preLoaderRoute: typeof AuthenticatedAddLocationImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/locations': {
      id: '/_authenticated/locations'
      path: '/locations'
      fullPath: '/locations'
      preLoaderRoute: typeof AuthenticatedLocationsImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/profile': {
      id: '/_authenticated/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthenticatedProfileImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/edit-location/$locationId': {
      id: '/_authenticated/edit-location/$locationId'
      path: '/edit-location/$locationId'
      fullPath: '/edit-location/$locationId'
      preLoaderRoute: typeof AuthenticatedEditLocationLocationIdImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedAddLocationRoute: typeof AuthenticatedAddLocationRoute
  AuthenticatedLocationsRoute: typeof AuthenticatedLocationsRoute
  AuthenticatedProfileRoute: typeof AuthenticatedProfileRoute
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedEditLocationLocationIdRoute: typeof AuthenticatedEditLocationLocationIdRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedAddLocationRoute: AuthenticatedAddLocationRoute,
  AuthenticatedLocationsRoute: AuthenticatedLocationsRoute,
  AuthenticatedProfileRoute: AuthenticatedProfileRoute,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedEditLocationLocationIdRoute:
    AuthenticatedEditLocationLocationIdRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedRouteWithChildren
  '/about': typeof AboutRoute
  '/add-location': typeof AuthenticatedAddLocationRoute
  '/locations': typeof AuthenticatedLocationsRoute
  '/profile': typeof AuthenticatedProfileRoute
  '/': typeof AuthenticatedIndexRoute
  '/edit-location/$locationId': typeof AuthenticatedEditLocationLocationIdRoute
}

export interface FileRoutesByTo {
  '/about': typeof AboutRoute
  '/add-location': typeof AuthenticatedAddLocationRoute
  '/locations': typeof AuthenticatedLocationsRoute
  '/profile': typeof AuthenticatedProfileRoute
  '/': typeof AuthenticatedIndexRoute
  '/edit-location/$locationId': typeof AuthenticatedEditLocationLocationIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/about': typeof AboutRoute
  '/_authenticated/add-location': typeof AuthenticatedAddLocationRoute
  '/_authenticated/locations': typeof AuthenticatedLocationsRoute
  '/_authenticated/profile': typeof AuthenticatedProfileRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/edit-location/$locationId': typeof AuthenticatedEditLocationLocationIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/about'
    | '/add-location'
    | '/locations'
    | '/profile'
    | '/'
    | '/edit-location/$locationId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/about'
    | '/add-location'
    | '/locations'
    | '/profile'
    | '/'
    | '/edit-location/$locationId'
  id:
    | '__root__'
    | '/_authenticated'
    | '/about'
    | '/_authenticated/add-location'
    | '/_authenticated/locations'
    | '/_authenticated/profile'
    | '/_authenticated/'
    | '/_authenticated/edit-location/$locationId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  AboutRoute: typeof AboutRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  AboutRoute: AboutRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/about"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/add-location",
        "/_authenticated/locations",
        "/_authenticated/profile",
        "/_authenticated/",
        "/_authenticated/edit-location/$locationId"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/_authenticated/add-location": {
      "filePath": "_authenticated/add-location.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/locations": {
      "filePath": "_authenticated/locations.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/profile": {
      "filePath": "_authenticated/profile.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/edit-location/$locationId": {
      "filePath": "_authenticated/edit-location/$locationId.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
